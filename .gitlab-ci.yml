image: php:8.2-alpine

variables:
  # Production
  DRUPAL_PROJECTROOT_PROD: "/var/www/vhosts/sebastix.nl/ccns"
  URL_PROD: "https://ccns.social"
  SSH_LOGIN_PROD: "ssh -T sebastix@ximo1.ximology.com"
  SSH_USER_PROD: "sebastix"
  SSH_HOST_PROD: "ximo1.ximology.com"

stages:
  - build
  - test
  - deploy

before_script:
  - 'which ssh-agent || ( apk add --update openssh )'
  - apk add --update bash
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - echo "$SSH_PRIVATE_KEY_PROD" | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # Install rsync
  - apk add rsync
  - rsync --version
  # Install curl
  - apk add curl
  # Install composer
  - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
  - alias composer='php /usr/bin/composer'
  - composer --version
  # Install nodejs and npm
  - apk add nodejs npm
  - node --version
  - npm --version
  # install php extensions
  # - see https://github.com/mlocati/docker-php-extension-installer
  - curl -sSLf -o /usr/bin/install-php-extensions https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions
  - chmod +x /usr/bin/install-php-extensions
  - install-php-extensions gd gmp
  # install git
  - apk add git

build:drupal:
  stage: build
  script:
    - composer install --no-dev --prefer-dist --optimize-autoloader
  artifacts:
    paths:
      - web
      - vendor

build:nostr-ndk:
  stage: build
  script:
    - cd web/modules/custom/nostr_ndk
    - npm install
    - npm run build
  artifacts:
    paths:
      - web/modules/custom/nostr_ndk/dist

build:theme:
  stage: build
  script:
    - cd web/themes/custom/ccns_theme
    - npm install
    - npm run build
  artifacts:
    paths:
      - web/themes/custom/ccns_theme/dist

deploy:prod:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  stage: deploy
  environment:
    name: production
    url: $URL_PROD
  dependencies:
    - build:drupal
    - build:nostr-ndk
    - build:theme
  script:
    - rsync -avz -e ssh ./composer.json $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD
    - rsync -avz -e ssh ./composer.lock $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD
    - rsync -avq --delete --exclude-from='gitlab-ci/rsync-excludes.txt' -e ssh ./config $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD
    - rsync -avq --delete --exclude-from='gitlab-ci/rsync-excludes.txt' -e ssh ./vendor $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD
    - $SSH_LOGIN_PROD "cd $DRUPAL_PROJECTROOT_PROD && chmod -R 755 ./config"
    - rsync -avq --delete --exclude-from='gitlab-ci/rsync-excludes.txt' -e ssh ./web $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD
    - rsync -azq --delete --exclude-from='gitlab-ci/rsync-excludes.txt' -e ssh web/modules/custom $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD/web/modules
    - rsync -azq --delete --exclude-from='gitlab-ci/rsync-excludes.txt' -e ssh web/themes/custom $SSH_USER_PROD@$SSH_HOST_PROD:$DRUPAL_PROJECTROOT_PROD/web/themes
    - $SSH_LOGIN_PROD "cd $DRUPAL_PROJECTROOT_PROD && chmod -R 755 ./web"
    - $SSH_LOGIN_PROD "cd $DRUPAL_PROJECTROOT_PROD && chmod -R 444 ./web/sites/default/settings.php"
    - $SSH_LOGIN_PROD "cd $DRUPAL_PROJECTROOT_PROD && chmod -R 444 ./web/sites/default/settings.local.php"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush cache-rebuild -y"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush updatedb -y"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush config-import -y"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush core-cron"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush ckeditor5_markdown_editor:install"
    - $SSH_LOGIN_PROD "$DRUPAL_PROJECTROOT_PROD/vendor/bin/drush cache-rebuild -y"
    - echo "Deployment ready, check $URL_PROD"
